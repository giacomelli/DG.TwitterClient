<UserControl x:Class="DG.TwitterClient.WpfHost.Controls.TweetsView"             
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:dgh="clr-namespace:DG.TwitterClient.WpfHost.Helpers;assembly=DG.TwitterClient.WpfHost.Helpers"
    xmlns:dgc="clr-namespace:DG.TwitterClient.WpfHost.Controls">
    <UserControl.Resources>
        <dgh:TwitterColorToColorConverter x:Key="ColorConverter"/>
        <dgh:IsOlderThanMinutesConverter x:Key="IsOlderThanMinutesConverter" />
        <dgh:TweetByAgeOpacityConverter x:Key="TweetByAgeOpacityConverter" />
        <dgh:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <dgh:BooleanToIntConverter x:Key="BooleanToIntConverter" />

        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <EventSetter Event="MouseDoubleClick" Handler="HandleItemDoubleClick" />
            <EventSetter Event="MouseEnter" Handler="HandleItemMouseEnter" />
            <EventSetter Event="MouseLeave" Handler="HandleItemMouseLeave" />
            <EventSetter Event="Selected" Handler="HandleItemSelected" />            
            <Setter Property="Opacity" Value="{Binding CreatedAt, Converter={StaticResource TweetByAgeOpacityConverter}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border CornerRadius="4" BorderThickness="3" Margin="1" BorderBrush="{Binding User.ProfileSidebarBorderColor, Converter={StaticResource ColorConverter}}">
                            <Grid Background="#FFFFFF">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48px"/>
                                    <ColumnDefinition Width="100px"/>
                                    <ColumnDefinition Width="50px"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="32px"/>
                                </Grid.ColumnDefinitions>
                                <Image 
                                    Source="{Binding User.ProfileImageUrl}"                                     
                                    Grid.Column="0" 
                                    Margin="2"
                                    VerticalAlignment="Center"/>
                                <TextBlock 
                                    Text="{Binding User.Identifier.ScreenName}" 
                                    Grid.Column="1" FontSize="8pt" 
                                    Foreground="{Binding User.ProfileTextColor, Converter={StaticResource ColorConverter}}"
                                    VerticalAlignment="Center"/>
                                <TextBlock 
                                    Text="{Binding CreatedAt, StringFormat=HH:mm}" 
                                    Grid.Column="2" 
                                    Foreground="{Binding User.ProfileTextColor, Converter={StaticResource ColorConverter}}"
                                    VerticalAlignment="Center"/>
                                <dgc:StatusTextBlock
                                    Name="TweetText"                                    
                                    StatusText="{Binding Text}"                                     
                                    HyperlinkBrush="{Binding User.ProfileLinkColor, Converter={StaticResource ColorConverter}}"
                                    TextWrapping="Wrap" 
                                    Grid.Column="3" 
                                    Grid.ColumnSpan="{Binding Path=HasImages, Converter={StaticResource BooleanToIntConverter}, ConverterParameter='1,2'}"
                                    Foreground="{Binding User.ProfileTextColor, Converter={StaticResource ColorConverter}}"                                    
                                    VerticalAlignment="Center"
                                    RequestNavigate="StatusTextBlock_RequestNavigate" />

                                <Image
                                    Name="TweetImage"
                                    Source="{Binding MainImageUrl}"
                                    Grid.Column="4"
                                    Stretch="Uniform" 
                                    Margin="2" 
                                    Visibility="{Binding Path=HasImages, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    />
                                
                                <Image 
                                    Name="ImageUnreadTweet" 
                                    Source="/DG.TwitterClient.WpfHost.Controls;component/Resources/Images/UnreadTweetIcon.png" 
                                    Grid.Column="5" 
                                    Stretch="Fill" 
                                    Width="24px" 
                                    Height="24px" 
                                    Margin="2"
                                    Visibility="{Binding Read, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true}"
                                    />                               
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Se usuário e conta estão visíveis -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding User.Visible}" Value="True" />
                        <Condition Binding="{Binding Account.Visible}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible" />
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetProperty="Opacity"
                                From="1" Duration="0:0:3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                </MultiDataTrigger>
                
                <!-- Se o usuário está invisível -->
                <DataTrigger Binding="{Binding User.Visible}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                
                <!-- Se a conta está invisível -->
                <DataTrigger Binding="{Binding Account.Visible}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                
                <!-- Se o item está selecionado -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Opacity" Value="1" />                    
                </Trigger>                

                <!-- Se o item perdeu a seleção -->
                <Trigger Property="IsSelected" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetProperty="Opacity"
                                From="1" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                
                <!-- Se o item está com o mouse sobre ele -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />                    
                </Trigger>
                
                <!-- Se o item não está com o mouse sobre ele -->
                <Trigger Property="IsMouseOver" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetProperty="Opacity"
                                From="1" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                
                <!-- Se o usuário está destacado -->
                <DataTrigger Binding="{Binding User.Highlight}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
                
                <!-- Se o usuário não está destacado -->
                <DataTrigger Binding="{Binding User.Highlight}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetProperty="Opacity"
                                From="1" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>

                <!-- Se a conta está destacada -->
                <DataTrigger Binding="{Binding Account.Highlight}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>

                <!-- Se a conta não está destacada -->
                <DataTrigger Binding="{Binding Account.Highlight}" Value="False">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation 
                                Storyboard.TargetProperty="Opacity"
                                From="1" Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <DockPanel LastChildFill="True">
            <Border BorderThickness="1" CornerRadius="4" Padding="2" Margin="2">
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,0.056" StartPoint="0.5,0.944">
                        <GradientStop Color="#FF666666" Offset="0"/>
                        <GradientStop Color="#FF747474" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <ListView Name="TweetsListView" 
                          ItemsSource="{Binding}" 
                          Foreground="#FFFFFFFF" 
                          BorderThickness="0" 
                          Padding="4"                           
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"                          
                          ItemContainerStyle="{StaticResource ListViewItemStyle}">
                    <ListView.Resources>
                        <Style x:Key="CustomHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </ListView.Resources>
                    <ListBox.Background>
                        <LinearGradientBrush EndPoint="0.5,0.496" StartPoint="1.25,0.99">
                            <GradientStop Color="#FF000000" Offset="0"/>
                            <GradientStop Color="#FF6A6A6A" Offset="1"/>
                            <GradientStop Color="#FF262626" Offset="0.181"/>
                        </LinearGradientBrush>
                    </ListBox.Background>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{DynamicResource CustomHeaderStyle}">
                        </GridView>
                    </ListView.View>
                </ListView>
            </Border>
        </DockPanel>
    </Grid>
</UserControl>
